import java.util.*;

class Stock {
    String symbol;
    double price;

    public Stock(String symbol, double price) {
        this.symbol = symbol;
        this.price = price;
    }
}

class Portfolio {
    private double balance;
    private HashMap<String, Integer> holdings;

    public Portfolio(double initialBalance) {
        this.balance = initialBalance;
        this.holdings = new HashMap<>();
    }

    public double getBalance() {
        return balance;
    }

    public void buyStock(String symbol, int quantity, double price) {
        double cost = quantity * price;
        if (cost > balance) {
            System.out.println("Insufficient balance!");
            return;
        }
        balance -= cost;
        holdings.put(symbol, holdings.getOrDefault(symbol, 0) + quantity);
        System.out.println("Bought " + quantity + " shares of " + symbol);
    }

    public void sellStock(String symbol, int quantity, double price) {
        if (!holdings.containsKey(symbol) || holdings.get(symbol) < quantity) {
            System.out.println("Not enough shares to sell!");
            return;
        }
        holdings.put(symbol, holdings.get(symbol) - quantity);
        balance += quantity * price;
        System.out.println("Sold " + quantity + " shares of " + symbol);
    }

    public void displayPortfolio() {
        System.out.println("Portfolio:");
        for (Map.Entry<String, Integer> entry : holdings.entrySet()) {
            if (entry.getValue() > 0)
                System.out.println(entry.getKey() + " - " + entry.getValue() + " shares");
        }
        System.out.println("Available Balance: $" + balance);
    }
}

public class StockTradingSim {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        HashMap<String, Stock> market = new HashMap<>();
        market.put("AAPL", new Stock("AAPL", 150.0));
        market.put("GOOGL", new Stock("GOOGL", 2800.0));
        market.put("TSLA", new Stock("TSLA", 700.0));
        
        Portfolio portfolio = new Portfolio(5000.0);

        while (true) {
            System.out.println("\nMarket Data:");
            for (Stock stock : market.values()) {
                System.out.println(stock.symbol + " - $" + stock.price);
            }
            
            System.out.println("\nChoose an action: buy, sell, portfolio, exit");
            String action = scanner.next();
            
            if (action.equalsIgnoreCase("buy")) {
                System.out.println("Enter stock symbol:");
                String symbol = scanner.next().toUpperCase();
                if (!market.containsKey(symbol)) {
                    System.out.println("Stock not found!");
                    continue;
                }
                System.out.println("Enter quantity:");
                int qty = scanner.nextInt();
                portfolio.buyStock(symbol, qty, market.get(symbol).price);
            } else if (action.equalsIgnoreCase("sell")) {
                System.out.println("Enter stock symbol:");
                String symbol = scanner.next().toUpperCase();
                if (!market.containsKey(symbol)) {
                    System.out.println("Stock not found!");
                    continue;
                }
                System.out.println("Enter quantity:");
                int qty = scanner.nextInt();
                portfolio.sellStock(symbol, qty, market.get(symbol).price);
            } else if (action.equalsIgnoreCase("portfolio")) {
                portfolio.displayPortfolio();
            } else if (action.equalsIgnoreCase("exit")) {
                System.out.println("Exiting simulation...");
                break;
            } else {
                System.out.println("Invalid action!");
            }
        }
        scanner.close();
    }
}
